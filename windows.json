{
  "_comment": "NAME=windows-10-enterprise-x64-eval WINDOWS_VERSION=10 VIRTIO_WIN_ISO=./packer_cache/virtio-win.iso ISO_CHECKSUM=ab4862ba7d1644c27f27516d24cb21e6b39234eb3301e5f1fb365a78b22f79b3 ISO_URL=https://software-download.microsoft.com/download/pr/18362.30.190401-1528.19h1_release_svc_refresh_CLIENTENTERPRISEEVAL_OEMRET_x64FRE_en-us.iso PACKER_IMAGES_OUTPUT_DIR=/var/tmp/ TMPDIR=/var/tmp/ packer build -only=qemu windows.json",
  "_comment": "NAME=windows-server-2012_r2-standard-x64-eval WINDOWS_VERSION=2012 VIRTIO_WIN_ISO=./packer_cache/virtio-win.iso ISO_CHECKSUM=6612b5b1f53e845aacdf96e974bb119a3d9b4dcb5b82e65804ab7e534dc7b4d5 ISO_URL=https://care.dlservice.microsoft.com/dl/download/6/2/A/62A76ABB-9990-4EFC-A4FE-C7D698DAEB96/9600.17050.WINBLUE_REFRESH.140317-1640_X64FRE_SERVER_EVAL_EN-US-IR3_SSS_X64FREE_EN-US_DV9.ISO PACKER_IMAGES_OUTPUT_DIR=/var/tmp/ TMPDIR=/var/tmp/ packer build -only=qemu windows.json",
  "_comment": "NAME=windows-server-2016-standard-x64-eval WINDOWS_VERSION=2016 VIRTIO_WIN_ISO=./packer_cache/virtio-win.iso ISO_CHECKSUM=1ce702a578a3cb1ac3d14873980838590f06d5b7101c5daaccbac9d73f1fb50f ISO_URL=https://software-download.microsoft.com/download/pr/Windows_Server_2016_Datacenter_EVAL_en-us_14393_refresh.ISO PACKER_IMAGES_OUTPUT_DIR=/var/tmp/ TMPDIR=/var/tmp/ packer build -only=qemu windows.json",
  "_comment": "NAME=windows-server-2019-standard-x64-eval WINDOWS_VERSION=2019 VIRTIO_WIN_ISO=./packer_cache/virtio-win.iso ISO_CHECKSUM=221f9acbc727297a56674a0f1722b8ac7b6e840b4e1ffbdd538a9ed0da823562 ISO_URL=https://software-download.microsoft.com/download/sg/17763.379.190312-0539.rs5_release_svc_refresh_SERVER_EVAL_x64FRE_en-us.iso PACKER_IMAGES_OUTPUT_DIR=/var/tmp/ TMPDIR=/var/tmp/ packer build -only=qemu windows.json",
  "variables": {
    "name": "{{ env `NAME` }}",
    "packer_images_output_dir": "{{ env `PACKER_IMAGES_OUTPUT_DIR` }}",
    "cpus": "2",
    "memory": "3072",
    "ssh_winrm_host_port": "2299",
    "virtio_win_iso": "{{ env `VIRTIO_WIN_ISO` }}",
    "iso_url": "{{ env `ISO_URL` }}",
    "iso_checksum": "{{ env `ISO_CHECKSUM` }}",
    "windows_version": "{{ env `WINDOWS_VERSION` }}",
    "autounattend": "http/windows-{{ env `WINDOWS_VERSION` }}/Autounattend.xml",
    "winrm_username": "vagrant",
    "winrm_password": "vagrant",
    "disk_size": "51200",
    "headless": "false"
  },

  "builders":
  [
    {
      "vm_name": "{{ user `name` }}",
      "type": "qemu",
      "iso_checksum_type": "sha256",
      "iso_checksum": "{{ user `iso_checksum` }}",
      "iso_urls": [ "{{ user `iso_url` }}" ],
      "communicator": "winrm",
      "ssh_host_port_min": "{{ user `ssh_winrm_host_port` }}",
      "ssh_host_port_max": "{{ user `ssh_winrm_host_port` }}",
      "winrm_username": "{{ user `winrm_username` }}",
      "winrm_password": "{{ user `winrm_password` }}",
      "winrm_timeout": "12h",
      "winrm_use_ssl": "true",
      "winrm_insecure": "true",
      "accelerator": "kvm",
      "headless": "{{ user `headless` }}",
      "output_directory": "{{ user `name` }}-qemu",

      "shutdown_command": "A:\\sysprep.bat",
      "shutdown_timeout": "15m",

      "qemuargs": [
        [ "-m", "{{ user `memory` }}" ],
        [ "-smp", "{{ user `cpus` }}" ],
        [ "-drive", "file={{ user `virtio_win_iso` }},media=cdrom,index=3" ],
        [ "-drive", "file={{ user `name` }}-qemu/{{ .Name }},if=virtio,cache=writeback,discard=ignore,format=qcow2,index=1" ]
      ],
      "disk_size": "{{ user `disk_size` }}",

      "floppy_files": [
        "{{ user `autounattend` }}",
        "scripts/win-common/fixnetwork.ps1",
        "scripts/win-common/unattend.xml",
        "scripts/win-common/sysprep.bat"
      ]
    },
    {
      "vm_name": "{{ user `name` }}",
      "type": "virtualbox-iso",
      "guest_os_type": "Windows{{ user `windows_version` }}_64",
      "iso_checksum_type": "sha256",
      "iso_checksum": "{{ user `iso_checksum` }}",
      "iso_urls": [ "{{ user `iso_url` }}" ],
      "ssh_host_port_min": "{{ user `ssh_winrm_host_port` }}",
      "ssh_host_port_max": "{{ user `ssh_winrm_host_port` }}",
      "communicator": "winrm",
      "winrm_username": "{{ user `winrm_username` }}",
      "winrm_password": "{{ user `winrm_password` }}",
      "winrm_timeout": "12h",
      "winrm_use_ssl": "true",
      "winrm_insecure": "true",
      "headless": "{{ user `headless` }}",
      "output_directory": "{{ user `name` }}-virtualbox-iso",
      "guest_additions_mode": "attach",

      "shutdown_command": "A:\\sysprep.bat",
      "shutdown_timeout": "15m",

      "hard_drive_interface": "sata",
      "disk_size": "{{ user `disk_size` }}",
      "vboxmanage": [
        [
          "modifyvm",
          "{{ .Name }}",
          "--cpus",
          "{{ user `cpus` }}"
        ],
        [
          "modifyvm",
          "{{ .Name }}",
          "--memory",
          "{{ user `memory` }}"
        ],
        [
          "modifyvm",
          "{{ .Name }}",
          "--audiocontroller",
          "hda"
        ]
      ],

      "floppy_files": [
        "{{ user `autounattend` }}",
        "scripts/win-common/fixnetwork.ps1",
        "scripts/win-common/unattend.xml",
        "scripts/win-common/sysprep.bat"
      ]
    }
  ],
  "provisioners": [
    {
      "type": "sleep",
      "duration": "1m"
    },
    {
      "type": "powershell",
      "only": ["virtualbox-iso"],
      "inline":
        [
          "$cert = (Get-AuthenticodeSignature 'E:\\VBoxWindowsAdditions.exe').SignerCertificate; [System.IO.File]::WriteAllBytes('C:\\vbox.cer', $cert.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Cert));",
          "certutil.exe -f -addstore TrustedPublisher C:\\vbox.cer",
          "E:\\VBoxWindowsAdditions.exe /S"
        ]
    },
    {
      "type": "shell-local",
      "environment_vars": "ANSIBLE_CONFIG=ansible/ansible.cfg",
      "command": "ansible-playbook --connection=winrm --extra-vars='ansible_winrm_server_cert_validation=ignore packer_build_name={{ user `name` }} ansible_user='{{ user `winrm_username` }}' ansible_ssh_pass='{{ user `winrm_password` }}' ansible_port={{ user `ssh_winrm_host_port` }}' -i 127.0.0.1, ansible/win-simple.yml"
    }
  ],
  "post-processors": [
    [
      {
        "type": "vagrant",
        "compression_level": 6,
        "vagrantfile_template": "Vagrantfile-windows.template",
        "output": "{{ user `packer_images_output_dir` }}/{{ user `name` }}-{{ .Provider }}.box"
      }
    ]
  ]
}
